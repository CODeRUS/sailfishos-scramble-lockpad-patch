diff --git a/Keypad.qml b/Keypad.qml
index a890b48..9bfeebc 100644
--- a/usr/lib/qt5/qml/Sailfish/Silica/Keypad.qml
+++ b/usr/lib/qt5/qml/Sailfish/Silica/Keypad.qml
@@ -40,14 +40,42 @@ Column {
     id: dialer
 
     property alias voiceMailIconSource: voiceMailIcon.source
-    property var vanityDialNumbers: ["", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz", "+", "", ""]
+    property variant vanityDialNumbers: ["", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"]
     property bool vanityDialNumbersVisible: true
     property bool symbolsVisible: true
     property color textColor: Theme.primaryColor
     property color pressedTextColor: Theme.highlightColor
     property alias pressedButtonColor: pressedButtonBackground.color
 
-    property string _numbers: "0123456789"
+    property bool randomize: !dialer.parent.hasOwnProperty("simManager") && !dialer.hasOwnProperty("dtmfPlaying") && !dialer.parent.emergency
+    property string newPin: dialer.parent.hasOwnProperty("_newPin") ? dialer.parent._newPin : ""
+    property var initialArray: ["0","1","2","3","4","5","6","7","8","9"]
+    property var numbersArray: initialArray
+    function shuffle() {
+        var numbers = initialArray
+        if (randomize) {
+            var counter = numbers.length, temp, index;
+            while (counter > 0) {
+                index = Math.floor(Math.random() * counter);
+                counter--;
+                temp = numbers[counter];
+                numbers[counter] = numbers[index];
+                numbers[index] = temp;
+            }
+        }
+        numbersArray = numbers
+    }
+    onVisibleChanged: shuffle()
+    onRandomizeChanged: shuffle()
+    onNewPinChanged: shuffle()
+    Connections {
+        target: dialer.parent
+        ignoreUnknownSignals: true
+        onPinConfirmed: shuffle()
+        onPinEntryCanceled: shuffle()
+        onEnteringNewPinChanged: shuffle()
+    }
+    property string _numbers: numbersArray.join("")
     property QtObject _feedbackEffect
     property int _buttonWidth: (3*Theme.itemSizeHuge - 4*Theme.paddingLarge) / 3
     property int _buttonHeight: screen.sizeCategory > Screen.Medium ? Theme.itemSizeExtraLarge : Theme.itemSizeLarge
@@ -130,7 +158,7 @@ Column {
         KeypadButton {
             key: Qt.Key_1
             text: _numbers.charAt(1)
-            secondaryText: vanityDialNumbers[0]
+            secondaryText: vanityDialNumbers[parseInt(text)]
             onPressAndHold: dialer.voiceMailCalled()
             Image {
                 id: voiceMailIcon
@@ -143,12 +171,12 @@ Column {
         KeypadButton {
             key: Qt.Key_2
             text: _numbers.charAt(2)
-            secondaryText: vanityDialNumbers[1]
+            secondaryText: vanityDialNumbers[parseInt(text)]
         }
         KeypadButton {
             key: Qt.Key_3
             text: _numbers.charAt(3)
-            secondaryText: vanityDialNumbers[2]
+            secondaryText: vanityDialNumbers[parseInt(text)]
         }
     }
     Row {
@@ -160,7 +188,7 @@ Column {
             KeypadButton {
                 key: Qt.Key_4 + index
                 text: _numbers.charAt(4 + index)
-                secondaryText: vanityDialNumbers[3 + index]
+                secondaryText: vanityDialNumbers[parseInt(text)]
             }
         }
     }
@@ -173,7 +201,7 @@ Column {
             KeypadButton {
                 key: Qt.Key_7 + index
                 text: _numbers.charAt(7 + index)
-                secondaryText: vanityDialNumbers[6 + index]
+                secondaryText: vanityDialNumbers[parseInt(text)]
             }
         }
     }
@@ -190,13 +218,13 @@ Column {
                 visible: symbolsVisible
                 key: Qt.Key_Asterisk
                 text: "*"
-                secondaryText: vanityDialNumbers[9]
+                secondaryText: ""
             }
         }
         KeypadButton {
             key: Qt.Key_0
-            text: "0"
-            secondaryText: vanityDialNumbers[10]
+            text: _numbers.charAt(0)
+            secondaryText: vanityDialNumbers[parseInt(text)]
         }
         Item {
             width: hashButton.width
@@ -207,7 +235,7 @@ Column {
                 visible: symbolsVisible
                 text: "#"
                 key: Qt.Key_NumberSign
-                secondaryText: vanityDialNumbers[11]
+                secondaryText: ""
             }
         }
     }